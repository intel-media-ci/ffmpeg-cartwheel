From fe6221aa01bb711f7203c70ac40392a0484e8e9e Mon Sep 17 00:00:00 2001
From: Linjie Fu <linjie.fu@intel.com>
Date: Thu, 12 Sep 2019 13:48:58 +0800
Subject: [PATCH 10/35] lavc/vaapi_hevc: add function to find exact va_profile
 for REXT

Add vaapi_parse_rext_profile and use profile constraint flags to
determine the exact va_profile for HEVC_REXT.

Add build object in Makefile for h265_profile_level dependency.

Signed-off-by: Linjie Fu <linjie.fu@intel.com>
---
 libavcodec/Makefile     |  2 +-
 libavcodec/vaapi_hevc.c | 69 +++++++++++++++++++++++++++++++++++++++++++++++++
 libavcodec/vaapi_hevc.h | 24 +++++++++++++++++
 3 files changed, 94 insertions(+), 1 deletion(-)
 create mode 100644 libavcodec/vaapi_hevc.h

diff --git a/libavcodec/Makefile b/libavcodec/Makefile
index c1f35b4..7cb914d 100644
--- a/libavcodec/Makefile
+++ b/libavcodec/Makefile
@@ -884,7 +884,7 @@ OBJS-$(CONFIG_HEVC_D3D11VA_HWACCEL)       += dxva2_hevc.o
 OBJS-$(CONFIG_HEVC_DXVA2_HWACCEL)         += dxva2_hevc.o
 OBJS-$(CONFIG_HEVC_NVDEC_HWACCEL)         += nvdec_hevc.o
 OBJS-$(CONFIG_HEVC_QSV_HWACCEL)           += qsvdec_h2645.o
-OBJS-$(CONFIG_HEVC_VAAPI_HWACCEL)         += vaapi_hevc.o
+OBJS-$(CONFIG_HEVC_VAAPI_HWACCEL)         += vaapi_hevc.o h265_profile_level.o
 OBJS-$(CONFIG_HEVC_VDPAU_HWACCEL)         += vdpau_hevc.o
 OBJS-$(CONFIG_MJPEG_NVDEC_HWACCEL)        += nvdec_mjpeg.o
 OBJS-$(CONFIG_MJPEG_VAAPI_HWACCEL)        += vaapi_mjpeg.o
diff --git a/libavcodec/vaapi_hevc.c b/libavcodec/vaapi_hevc.c
index ab48b73..0604e23 100644
--- a/libavcodec/vaapi_hevc.c
+++ b/libavcodec/vaapi_hevc.c
@@ -27,6 +27,8 @@
 #include "hevcdec.h"
 #include "hwaccel.h"
 #include "vaapi_decode.h"
+#include "vaapi_hevc.h"
+#include "h265_profile_level.h"
 
 typedef struct VAAPIDecodePictureHEVC {
     VAPictureParameterBufferHEVC pic_param;
@@ -494,6 +496,73 @@ static int vaapi_hevc_decode_slice(AVCodecContext *avctx,
     return 0;
 }
 
+static int ptl_convert(const PTLCommon *general_ptl, H265RawProfileTierLevel *h265_raw_ptl)
+{
+    h265_raw_ptl->general_profile_space = general_ptl->profile_space;
+    h265_raw_ptl->general_tier_flag     = general_ptl->tier_flag;
+    h265_raw_ptl->general_profile_idc   = general_ptl->profile_idc;
+
+    memcpy(h265_raw_ptl->general_profile_compatibility_flag,
+                                  general_ptl->profile_compatibility_flag, 32 * sizeof(int));
+
+    h265_raw_ptl->general_progressive_source_flag          = general_ptl->progressive_source_flag;
+    h265_raw_ptl->general_interlaced_source_flag           = general_ptl->interlaced_source_flag;
+    h265_raw_ptl->general_non_packed_constraint_flag       = general_ptl->non_packed_constraint_flag;
+    h265_raw_ptl->general_frame_only_constraint_flag       = general_ptl->frame_only_constraint_flag;
+    h265_raw_ptl->general_max_12bit_constraint_flag        = general_ptl->max_12bit_constraint_flag;
+    h265_raw_ptl->general_max_10bit_constraint_flag        = general_ptl->max_10bit_constraint_flag;
+    h265_raw_ptl->general_max_8bit_constraint_flag         = general_ptl->max_8bit_constraint_flag;
+    h265_raw_ptl->general_max_422chroma_constraint_flag    = general_ptl->max_422chroma_constraint_flag;
+    h265_raw_ptl->general_max_420chroma_constraint_flag    = general_ptl->max_420chroma_constraint_flag;
+    h265_raw_ptl->general_max_monochrome_constraint_flag   = general_ptl->max_monochrome_constraint_flag;
+    h265_raw_ptl->general_intra_constraint_flag            = general_ptl->intra_constraint_flag;
+    h265_raw_ptl->general_one_picture_only_constraint_flag = general_ptl->one_picture_only_constraint_flag;
+    h265_raw_ptl->general_lower_bit_rate_constraint_flag   = general_ptl->lower_bit_rate_constraint_flag;
+    h265_raw_ptl->general_max_14bit_constraint_flag        = general_ptl->max_14bit_constraint_flag;
+    h265_raw_ptl->general_inbld_flag                       = general_ptl->inbld_flag;
+    h265_raw_ptl->general_level_idc                        = general_ptl->level_idc;
+
+    return 0;
+}
+
+/*
+ * Find exact va_profile for HEVC Range Extension
+ */
+VAProfile ff_vaapi_parse_rext_profile(AVCodecContext *avctx)
+{
+    const HEVCContext *h = avctx->priv_data;
+    const HEVCSPS *sps = h->ps.sps;
+    const PTL *ptl = &(sps->ptl);
+    const PTLCommon *general_ptl = &(ptl->general_ptl);
+    const H265ProfileDescriptor *profile = NULL;
+
+    H265RawProfileTierLevel *h265_raw_ptl = av_mallocz(sizeof(H265RawProfileTierLevel));
+    /* convert PTLCommon to H265RawProfileTierLevel */
+    ptl_convert(general_ptl, h265_raw_ptl);
+
+    profile = ff_h265_get_profile(h265_raw_ptl);
+    av_freep(&h265_raw_ptl);
+
+    if (!profile)
+        return VAProfileNone;
+
+#if VA_CHECK_VERSION(1, 2, 0)
+    if (!strcmp(profile->name, "Main 4:2:2 10") ||
+        !strcmp(profile->name, "Main 4:2:2 10 Intra"))
+        return VAProfileHEVCMain422_10;
+    else if (!strcmp(profile->name, "Main 4:4:4") ||
+             !strcmp(profile->name, "Main 4:4:4 Intra"))
+        return VAProfileHEVCMain444;
+    else if (!strcmp(profile->name, "Main 4:4:4 10") ||
+             !strcmp(profile->name, "Main 4:4:4 10 Intra"))
+        return VAProfileHEVCMain444_10;
+#else
+    av_log(avctx, AV_LOG_WARNING, "HEVC profile %s is "
+                        "not supported with this VA version.\n", profile->name);
+#endif
+    return VAProfileNone;
+}
+
 const AVHWAccel ff_hevc_vaapi_hwaccel = {
     .name                 = "hevc_vaapi",
     .type                 = AVMEDIA_TYPE_VIDEO,
diff --git a/libavcodec/vaapi_hevc.h b/libavcodec/vaapi_hevc.h
new file mode 100644
index 0000000..6c57971
--- /dev/null
+++ b/libavcodec/vaapi_hevc.h
@@ -0,0 +1,24 @@
+/*
+ * This file is part of FFmpeg.
+ *
+ * FFmpeg is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * FFmpeg is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with FFmpeg; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ */
+
+#ifndef AVCODEC_VAAPI_HEVC_H
+#define AVCODEC_VAAPI_HEVC_H
+
+VAProfile ff_vaapi_parse_rext_profile(AVCodecContext *avctx);
+
+#endif /* AVCODEC_VAAPI_HEVC_H */
-- 
2.7.4

